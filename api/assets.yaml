openapi: 3.0.1
info:
  title: Assets Methods
  description: Set and unset assets by name
  version: "1.0.0"
servers:
  - url: 'http://localhost:3000'
paths:
  "/api/v1/assets.setAsset":
    post:
      description: Set an asset image by name.
      parameters:
      - $ref: '#/components/parameters/user-id'
      - $ref: '#/components/parameters/auth-token'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
              # EAR Note:  These are mutually exclusive but that is not yet represented here.  
              # Need to at least make a comment in descriptions or use one of the strategies you will find in this PR.
                logo:
                  type: string
                  format: binary
                  example: myLogo.png
                  description: Asset File to upload.
                background:
                  type: string
                  format: binary
                  example: myBackground (svg, png, jpg)
                  description: Asset File to upload.
                favicon:
                  type: string
                  format: binary
                  example: myLogo (svg, png, jpg)
                  description: Asset File to upload.
                favicon_ico:
                  type: string
                  format: binary
                  example: myLogo.ico
                  description: Asset File to upload.
                favicon_16:
                  type: string
                  format: binary
                  example: myLogo.png
                  description: Asset File to upload.
                favicon_32:
                  type: string
                  format: binary
                  example: myLogo.png
                  description: Asset File to upload.
                # TODO [favicon_192, favicon_512, touchicon_180, touchicon_180_pre, tile_70, tile_144, tile_150, tile_310_square, tile_310_wide, safari_pinned ]]
                refreshAllClients:
                  $ref: '#/components/schemas/refreshAllClients'
            # examples:
            #   '0':
            #     value: '{ "logo": "myLogo.png" }'
      responses:
        '200':
          description: Set an asset by name. Requires `manage-assets` permission.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                '0':
                  value: |-
                    {
                      "success": true
                    }
      servers:
      - url: http://localhost:3000
    servers:
    - url: http://localhost:3000
  "/api/v1/assets.unsetAsset":
    post:
      description: Unset an asset by name.
      parameters:
      - $ref: '#/components/parameters/user-id'
      - $ref: '#/components/parameters/auth-token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - assetName
              properties:
                refreshAllClients:
                  $ref: '#/components/schemas/refreshAllClients'
                assetName:
                  type: string
                  example: logo
                  description: Asset name to unset.
            examples:
              '0':
                value: '{ "assetName": "logo", "refreshAllClients": true}'
      responses:
        '200':
          description: Unset an asset by name. Requires `manage-assets` permission.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                '0':
                  value: |-
                    {
                      "success": true
                    }
      servers:
      - url: http://localhost:3000
    servers:
    - url: http://localhost:3000
components:
  parameters:
    user-id:
      name: X-User-Id
      in: header
      required: true
      schema:
        type: string
        example: bszJr4E8EHAtLqfX4
    auth-token:
      name: X-Auth-Token
      in: header
      required: true
      schema:
        type: string
        example: TdYcM_4SP8R1no0-pytKAfyiKUih24DswM6AMoYeqS7
  schemas:
    refreshAllClients:
      type: boolean
      example: true
      description: If needs refresh all clients to apply changes immediately.
  securitySchemes:
    # IS THIS CORRECT?
    basic:
      type: http
      scheme: basic
